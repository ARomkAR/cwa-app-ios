version: 2.1

commands:
  prepare-dependencies:
    steps:
      - checkout
      - run:
          name: fix SwiftPM #Solves and old Xcode 11 issue that seems to got reintroduced with Xcode 12: https://stackoverflow.com/questions/58125659/github-actions-xcodebuild-fails-due-to-server-fingerprint
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: Install Bundler
          command: sudo gem install bundler:2.1.4
      - run:
          name: Install swiftlint
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install swiftlint
      - restore_cache:
          key: v2-{{ checksum "src/xcode/Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: cd src/xcode && bundle install --path=vendor --jobs=4
      - save_cache:
          key: v2-{{ checksum "src/xcode/Gemfile.lock" }}
          paths:
            - "src/xcode/vendor"


jobs:
  dependencies:
    macos:
      xcode: 12.1.0
    steps:
      - prepare-dependencies
      - persist_to_workspace:
          root: .
          paths:
            - ./*

  build:
    macos:
      xcode: 12.1.0
    shell: zsh
    steps:
      - prepare-dependencies
      - run:
          name: Build
          command: cd src/xcode && bundle exec fastlane build
  test:
    macos:
      xcode: 12.1.0
    shell: zsh
    steps:
      - prepare-dependencies
      - run:
          name: Tests
          command: cd src/xcode && bundle exec fastlane test
      - restore_cache:
          key: sonar-cloud-v2
      - run:
          name: Convert coverage information to SonarCloud format
          command: |
            ./scripts/xcov_to_sonar.sh src/xcode/fastlane/test_output/action_0.xccovarchive/ $CIRCLE_WORKING_DIRECTORY/ src/xcode/fastlane/test_output/coverage.xml
      - run:
          name: Fix SwiftLint output for SonarCloud
          command: |
            ./scripts/fix_swiftlint_output.sh src/xcode/swiftlint.result.json
      - store_test_results:
          path: src/xcode/fastlane/test_output
      - store_artifacts:
          path: src/xcode/fastlane/test_output
      - store_artifacts:
          path: src/xcode/swiftlint.result.json
      - run:
          name: Skip SonarCloud for external Pull Requests
          command: '[[ -v CIRCLE_PR_REPONAME ]] && circleci-agent step halt || true'
      - run:
          name: Install and run sonar-scanner
          command: |
            SCANNER=sonar-scanner-cli-4.3.0.2102-macosx
            SCANNERDIR=~/sonar/sonar-scanner-4.3.0.2102-macosx
            if [[ ! -x "$SCANNERDIR/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/$SCANNER.zip
              unzip -qq -o $SCANNER.zip -d ~/sonar/
            fi
            chmod +x $SCANNERDIR/bin/sonar-scanner
            chmod +x $SCANNERDIR/jre/bin/java
            $SCANNERDIR/bin/sonar-scanner
          environment:
            SONARQUBE_SCANNER_PARAMS: '{"sonar.host.url":"https://sonarcloud.io"}'
      - save_cache:
          key: sonar-cloud-v2
          paths:
            - ~/sonar/
  grab-screenshots:
    macos:
      xcode: 12.1.0
    steps:
      - prepare-dependencies
      - run:
          name: Snapshots
          command: cd src/xcode && bundle exec fastlane snapshot
      - run:
          name: Package Screenshots
          command: cd src/xcode && tar -czf screenshots/screenshots.tar --exclude='*.tar' screenshots && cd -
      - store_artifacts:
          path: src/xcode/screenshots/screenshots.tar
  snapshot:
    macos:
      xcode: 12.1.0
    parameters:
      language:
        default: "de-DE"
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Snapshot
          command: cd src/xcode && bundle exec fastlane run snapshot languages:<<parameters.language>> clear_previous_screenshots:"false" && cd -
      - run:
          name: Rename overview html
          command: mv src/xcode/screenshots/screenshots.html src/xcode/screenshots/screenshots-<<parameters.language>>.html
      - persist_to_workspace:
          root: .
          paths:
            - src/xcode/screenshots/*
  collect-snapshots:
    macos:
      xcode: 12.1.0
    steps:
      - attach_workspace:
          at: src/xcode/screenshots
      - run:
          name: Package Screenshots
          command: tar -czf screenshots.tar --exclude='*.tar' screenshots
      - store_artifacts:
          path: screenshots.tar
  testflight-release:
    macos:
      xcode: 12.1.0
    shell: zsh
    steps:
      - prepare-dependencies
      - run: ./scripts/switch_to_dev_env.sh
      - run:
          name: fastlane testflight
          command: cd src/xcode && bundle exec fastlane betaRelease --env TestFlight
      - run:
          name: fastlane appcenter
          command: cd src/xcode && bundle exec fastlane adHocDistribution
  update-docs:
    macos:
      xcode: 12.1.0
    shell: zsh
    steps:
      - prepare-dependencies
      - add_ssh_keys:
          fingerprints:
            - "2c:ea:55:72:82:d9:8a:35:02:ac:25:a6:39:3c:e4:23"
      - run:
          name: Run lane for doc update
          command: cd src/xcode && bundle exec fastlane updateDocs

workflows:
    # test-and-scan:
    #   jobs:
    #     - test
    # build:
    #   jobs:
    #     - build
    #     - update-docs:
    #         filters:
    #           branches:
    #             only:
    #               - main
    #     - grab-screenshots:
    #         filters:
    #           branches:
    #             only:
    #               - main
    build-and-test:
      jobs:
        - dependencies
        - build:
            requires:
              - dependencies
        - test:
            requires:
              - dependencies
        - update-docs:
            requires:
              - dependencies
            filters:
              branches:
                only:
                  - main

    snapshot-all:
      jobs:
        - dependencies
            # filters:
            #   branches:
            #     only:
            #       - main
        - snapshot:
            matrix:
              parameters:
                language: ["de-DE", "en-EN", "bg-BG", "ro-RO", "pl-PL", "tr-TR"]
            requires:
              - dependencies
        - collect-snapshots:
            requires:
              - snapshot

    # betaRelease:
    #   jobs:
    #     - test:
    #         filters:
    #           tags:
    #             only:
    #               - /^v.*/
    #           branches:
    #             ignore: /.*/
    #     - build:
    #         filters:
    #           tags:
    #             only:
    #               - /^v.*/
    #           branches:
    #             ignore: /.*/
    #     - grab-screenshots:
    #         filters:
    #           tags:
    #             only:
    #               - /^v.*/
    #           branches:
    #             ignore: /.*/
    #     - testflight-release:
    #         requires:
    #           - test
    #           - build
    #         filters:
    #           tags:
    #             only:
    #               - /^v.*/
    #           branches:
    #             ignore: /.*/
